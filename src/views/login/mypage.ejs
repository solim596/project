<!DOCTYPE html>
<html>

<head>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
    <link rel="stylesheet" type="text/css" href="/mypage.css">
</head>

<body>

    <!-- 네비게이션 바 (헤더) 추가 -->
    <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
        <div class="container">
            <a class="navbar-brand" href="/"><strong class="text-dark">배달 주문 사이트</strong></a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav"
                aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav ml-auto">
                    <li class="nav-item dropdown">
                        <!-- 드롭다운 토글 버튼 -->
                        <a class="nav-link text-dark dropdown-toggle" href="#" id="noticeDropdown" role="button"
                            data-bs-toggle="dropdown" aria-expanded="false">
                            <strong>공지사항</strong>
                        </a>
                        <!-- 드롭다운 메뉴 -->
                        <ul class="dropdown-menu" aria-labelledby="noticeDropdown">
                            <!-- 공지사항 하위 메뉴 -->
                            <li><a class="dropdown-item" href="/event">이벤트</a></li>
                        </ul>
                    </li>
                    <li class="nav-item dropdown">
                        <!-- 드롭다운 토글 버튼 -->
                        <a class="nav-link text-dark dropdown-toggle" href="#" id="categoryDropdown" role="button"
                            data-bs-toggle="dropdown" aria-expanded="false">
                            <strong>카테고리</strong>
                        </a>
                        <!-- 드롭다운 메뉴 -->
                        <ul class="dropdown-menu" aria-labelledby="categoryDropdown">
                            <!-- 카테고리 하위 메뉴 -->
                            <li><a class="dropdown-item" href="#">음식</a></li>
                        </ul>
                    </li>
                    <li class="nav-item dropdown">
                        <!-- 드롭다운 토글 버튼 -->
                        <a class="nav-link text-dark dropdown-toggle" href="#" id="guideDropdown" role="button"
                            data-bs-toggle="dropdown" aria-expanded="false">
                            <strong>이용가이드</strong>
                        </a>
                        <!-- 드롭다운 메뉴 -->
                        <ul class="dropdown-menu" aria-labelledby="guideDropdown">
                            <!-- 이용가이드 하위 메뉴 -->
                            <li><a class="dropdown-item" href="/guide">도움말</a></li>
                            <li><a class="dropdown-item" href="/boardL">문의하기</a></li>

                        </ul>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link text-dark" href="/loginpage"><strong>로그인</strong></a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link text-dark" href="/signup"><strong>회원가입</strong></a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>


    <!-- 검색 폼 -->
    <form class="form-inline mt-3" id="search-form">
        <!-- 검색 입력란의 ID를 "search-input"으로 수정 -->
        <input class="form-control" type="search" placeholder="음식 또는 가게 검색" aria-label="Search" id="search-input">
        <!-- 검색 버튼의 type을 "submit"으로 수정 -->
        <button class="btn btn-outline-success" type="submit">검색</button>
    </form>

    <!-- 네비바 -->
    <div class="navbar2">
        <ul>

            <li><a href="치킨.html" onclick="navigateTo('치킨.html')">치킨</a> |</li>
            <li><a href="피자.html" onclick="navigateTo('피자.html')">피자</a> |</li>
            <li><a href="짜장면.html" onclick="navigateTo('짜장면.html')">중국집</a> |</li>
            <li><a href="한식.html" onclick="navigateTo('한식.html')">한식</a> |</li>
            <li><a href="일식.html" onclick="navigateTo('일식.html')">일식 / 돈까스</a> |</li>
            <li><a href="분식.html" onclick="navigateTo('분식.html')">분식</a> |</li>
            <li><a href="야식.html" onclick="navigateTo('야식.html')">야식</a> |</li>
            <li><a href="프렌차이츠.html" onclick="navigateTo('프렌차이츠.html')">프렌차이즈</a> |</li>
            <li><a href="카페.html" onclick="navigateTo('카페.html')">카페</a> |</li>
            <li><a href="편의점.html" onclick="navigateTo('편의점.html')">편의점</a> |</li>
            <li><a href="1인주문.html" onclick="navigateTo('1인주문.html')">1인분 주문</a></li>
        </ul>
    </div>
    <h1>마이페이지</h1>

    <!-- 그리드 컨테이너 생성 -->
    <div class="grid-container">
        <!-- 그리드 아이템 생성 -->
        <div class="grid-item" id="user-info">
            <!-- 회원 정보 수정 버튼 클릭 시 -->
            <button class="button" id="edit-user-info">회원 정보 수정</button>
        </div>
        <div class="grid-item span" id="edit-info-form">
            <!-- 병합한 셀 가운데에 정보 수정 양식 추가 -->
            <div class="user-info-form">
                <!-- 회원 정보 수정 양식 -->
                <form>
                    <label for="name">이름:</label>
                    <input type="text" id="name" name="name"><br><br>

                    <label for="password">비밀번호:</label>
                    <input type="password" id="password" name="password"><br><br>

                    <label for="new-password">수정할 비밀번호:</label>
                    <input type="password" id="new-password" name="new-password"><br><br>

                    <label for="address">수정할 주소:</label>
                    <input type="text" id="address" name="address"><br><br>

                    <label for="phone">수정할 전화번호:</label>
                    <input type="text" id="phone" name="phone"><br><br>
                </form>
                <button class="button" id="confirm-user">확인</button>
                <button class="button" id="cancel-user">취소</button>
            </div>

            <!-- 비즈니스 정보 수정 양식 추가 -->
            <div class="business-info-form">
                <!-- 비즈니스 정보 수정 양식 -->
                <form>
                    <label for="business-address">수정할 비즈니스 주소:</label>
                    <input type="text" id="business-address" name="business-address"><br><br>

                    <label for="business-phone">수정할 비즈니스 전화번호:</label>
                    <input type="text" id="business-phone" name="business-phone"><br><br>
                </form>
                <button class="button" id="confirm-business">확인</button>
                <button class="button" id="cancel-business">취소</button>
            </div>
        </div>
        <div class="grid-item" id="business-info">
            <!-- 비즈니스 정보 수정 버튼 클릭 시 -->
            <button class="button" id="edit-business-info">비즈니스 회원 수정</button>
        </div>
        <div class="grid-item seven" id="cart-info">
            <!-- 장바구니 버튼을 추가하고 클릭 시 정보를 보여줄 영역 -->
            <button class="button" id="view-cart">장바구니 보기</button>
            <div id="cart-info-content" style="display: none;">
                <!-- 장바구니 정보를 보여줄 곳 -->
            </div>
        </div>
    </div>

    <footer>
        <p>&copy; 2023 웹 페이지 푸터</p>
        <nav>
            <a href="이용약관.html">이용약관</a>
            <a href="#">개인정보방침</a>
            <a href="소개.html">소개</a>
            <a href="#">음식점소개</a>
            <a href="#">공지사항</a>
        </nav>
        <p>한국폴리텍대학 인천캠퍼스 AI융합소프트웨어과 2-A반</p>
    </footer>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM"
        crossorigin="anonymous"></script>
    <script>
        let isNavigating = false; // 페이지 이동 중인지 여부를 추적하는 변수

        // 링크 클릭 시 호출되는 함수
        async function navigateTo(url) {
            if (!isNavigating) {
                isNavigating = true;

                try {
                    await goToPage(url); // 페이지 이동을 비동기적으로 수행
                } catch (error) {
                    // 페이지 이동 중 오류 발생 시 오류 처리
                    console.error(error);
                } finally {
                    // 페이지 이동이 완료되면 다시 링크 클릭을 허용
                    isNavigating = false;
                }
            }
        }

        // 페이지 이동 함수
        async function goToPage(url) {
            return new Promise((resolve, reject) => {
                // 페이지 이동 로직을 여기에 작성
                // 예를 들어, 페이지를 로드하는데 setTimeout을 사용하면 다음과 같습니다.
                setTimeout(() => {
                    window.location.href = url; // 링크로 이동
                    resolve(); // 페이지 이동 완료 후 Promise를 resolve
                }, 1000); // 1초 후 이동 (원하는 딜레이를 설정하세요)
            });
        }
    </script>

    <script>
        // 검색 폼에서 submit 이벤트 발생 시 검색 함수 호출
        document.getElementById("search-form").addEventListener("submit", function (event) {
            event.preventDefault(); // 기본 동작(페이지 새로고침) 방지
            search();
        });

        function search() {
            // 검색어 가져오기
            var searchInput = document.getElementById("search-input").value;

            // 검색어를 페이지 이름으로 사용하여 페이지 이동
            window.location.href = searchInput + ".html";
        }
    </script>



    <script>
        // 회원 정보 수정 버튼 클릭 시
        document.getElementById("edit-user-info").addEventListener("click", function () {
            const userForm = document.querySelector(".user-info-form");
            const businessForm = document.querySelector(".business-info-form");
            const cartForm = document.querySelector(".cart-info-form");

            userForm.style.display = "block";
            businessForm.style.display = "none";
            cartForm.style.display = "none";

            // 합성된 셀 내부의 내용 초기화
            const infoCell = document.querySelector(".grid-item.span");
            infoCell.innerHTML = "";
            infoCell.appendChild(userForm);
        });

        // 비즈니스 정보 수정 버튼 클릭 시
        document.getElementById("edit-business-info").addEventListener("click", function () {
            const businessForm = document.querySelector(".business-info-form");
            const userForm = document.querySelector(".user-info-form");
            const cartForm = document.querySelector(".cart-info-form");

            businessForm.style.display = "block";
            userForm.style.display = "none";
            cartForm.style.display = "none";

            // 합성된 셀 내부의 내용 초기화
            const infoCell = document.querySelector(".grid-item.span");
            infoCell.innerHTML = "";
            infoCell.appendChild(businessForm); // 비즈니스 회원 수정 양식을 추가
        });

        // 장바구니 보기 버튼 클릭 시
        document.getElementById("view-cart").addEventListener("click", function () {
            const userForm = document.querySelector(".user-info-form");
            const businessForm = document.querySelector(".business-info-form");
            const cartForm = document.querySelector(".cart-info-form");

            cartForm.style.display = "block";
            userForm.style.display = "none";
            businessForm.style.display = "none";

            // 합성된 셀 내부의 내용 초기화
            const infoCell = document.querySelector(".grid-item.span");
            infoCell.innerHTML = "";
        });


        // 확인 버튼 클릭 시 (회원 정보 수정)
        document.getElementById("confirm-user").addEventListener("click", function () {
            // 이 부분에서 MySQL에 유저 정보를 업데이트하는 코드를 작성해야 합니다.
            // JavaScript와 서버 사이드 코드 (예: PHP, Node.js)를 사용하여 데이터베이스에 접근 및 업데이트 해야 합니다.
            // 아래는 가상의 예시 코드입니다.

            const newName = document.getElementById("name").value;
            const newPassword = document.getElementById("new-password").value;
            const newAddress = document.getElementById("address").value;
            const newPhone = document.getElementById("phone").value;

            // 여기에서 서버로 데이터를 보내어 업데이트를 수행할 수 있습니다.
            // 예: fetch() 또는 XMLHttpRequest를 사용하여 서버에 요청을 보내고 응답을 처리하는 방법을 사용할 수 있습니다.
            // 실제로는 백엔드 서버와의 통합이 필요합니다.
        });

        // 확인 버튼 클릭 시 (비즈니스 정보 수정)
        document.getElementById("confirm-business").addEventListener("click", function () {
            // 이 부분에서 MySQL에 비즈니스 회원 정보를 업데이트하는 코드를 작성해야 합니다.
            // JavaScript와 서버 사이드 코드 (예: PHP, Node.js)를 사용하여 데이터베이스에 접근 및 업데이트 해야 합니다.
            // 아래는 가상의 예시 코드입니다.

            const newBusinessAddress = document.getElementById("business-address").value;
            const newBusinessPhone = document.getElementById("business-phone").value;

            // 여기에서 서버로 데이터를 보내어 업데이트를 수행할 수 있습니다.
            // 예: fetch() 또는 XMLHttpRequest를 사용하여 서버에 요청을 보내고 응답을 처리하는 방법을 사용할 수 있습니다.
            // 실제로는 백엔드 서버와의 통합이 필요합니다.
        });

    </script>

</body>

</html>